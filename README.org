#+title:ðŸŽ¬KinowayðŸŽ¥

#+begin_html
<div align="center">
		<img src="./static/banner.png">
</div>

<p align="center">
		<img src="https://img.shields.io/github/stars/Tell396/kinoway?color=e57474&labelColor=1e2528&style=for-the-badge"> <img src="https://img.shields.io/github/issues/Tell396/kinoway?color=67b0e8&labelColor=1e2528&style=for-the-badge">
		<img src="https://img.shields.io/static/v1?label=license&message=MIT&color=8ccf7e&labelColor=1e2528&style=for-the-badge">
		<img src="https://img.shields.io/github/forks/Tell396/kinoway?color=e5c76b&labelColor=1e2528&style=for-the-badge">
</p>

<div align="center">
		<i><b>Movies â€” are an experience</b></i>
		<br><br>
</div>

#+end_html

Kinoway is a free and open client-based online movie service that uses the Kinopoisk API.

#+begin_center
Watch movies and TV series for free, in high definition, with no restrictions!
#+end_center

** ðŸ‘‰InstallationðŸ¤˜
*** 1. Clone this repository:
#+begin_src bash
  git clone https://github.com/Tell396/kinoway
#+end_src

*** 2. Create and change variables in ~client/.env.local~:
#+begin_src bash
  NEXT_PUBLIC_API_URL=your-token
  NEXT_PUBLIC_API_KEY=very-secret-url
#+end_src

*** 3. Install deps (force):
#+begin_src bash
  npm i -f
#+end_src

*** 4. Now we can startðŸš€
#+begin_src bash
  npm run dev
#+end_src

** ToDo List
- ~@components~ *is architecture fail.* *We shall use* ~../../../../~

*** Client (TS) [18/23]
1) [-] Add "Too many requests" error
2) [X] Add loader for all pages
3) [X] Add reviews section for movies
4) [X] Add filters
5) [X] Create "Actor" page
6) [-] Create "Random films" section with 4-5 random films
7) [X] Create "View more" page with films, TV shows
8) [X] Add filters
9) [X] Create 404 page
10) [X] Add rating to SearchList component
11) [ ] Delete ~.module.scss~ files and move to whole ChakraUI
12) [ ] Add and change Catalog.tsx
13) [X] Add more content for [[file:client/src/components/screens/Film/Film.tsx][Film.tsx]]
14) [X] Create component to provide ~data~ on it. Like ~<Content data={data} loading={isLoading} error={isError} />~
15) [X] Fix "NaN" mark of film in SearchResults component
16) [X] Fix "NaN" mark of film in SimilarMovies component
17) [X] Fix "Similar movies" component
18) [X] Add "Watch later" button (component)
19) [X] Fix footer on film search page
20) [-] Optimize film page opening
21) [X] Redesign main page
22) [X] Redesign film page
23) [-] Change logic of ~Hero.tsx~ compoennt. Like ~Header movieData={pathToData}~.

**** ChakraUI
1) [X] Update buttons 
2) [X] Update theme switcher
3) [X] Update film cards
4) [X] Update LoadMoreButton
5) [-] Update spinner
6) [X] Update header. Add burger menu
7) [X] Update PlayMovie button
8) [-] Do something with [[file:client/src/components/Catalog/Catalog.tsx][Catalog.tsx]]


*** Server (Rust) (Not started yet) [1/3]
1) [ ] Deploy server
2) [ ] Add main endpoints
3) [X] Create ~.env.local~ and ~.env.example~
4) [ ] Connect avatar_url uploading with [[https://api.imgbb.com/][imgbb]]

 User model:
 #+begin_src rust
   struct User {
       id: i64,
       role: String, // "admin"
       email: String, // "johndoe123@gmail.com"
       password: String, // "password123"
       display_name: String, // "John Doe"
       avatar_url: String // "https://avatar.png"
   }
 #+end_src

 #+RESULTS:
