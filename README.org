#+title:ðŸŽ¬KinowayðŸŽ¥

#+begin_html
<div align="center">
		<img src="./static/banner.png">
</div>

<p align="center">
		<img src="https://img.shields.io/github/stars/Tell396/kinoway?color=e57474&labelColor=1e2528&style=for-the-badge"> <img src="https://img.shields.io/github/issues/Tell396/kinoway?color=67b0e8&labelColor=1e2528&style=for-the-badge">
		<img src="https://img.shields.io/static/v1?label=license&message=MIT&color=8ccf7e&labelColor=1e2528&style=for-the-badge">
		<img src="https://img.shields.io/github/forks/Tell396/kinoway?color=e5c76b&labelColor=1e2528&style=for-the-badge">
</p>

<div align="center">
		<i><b>Movies â€” are an experience</b></i>
		<br><br>
</div>

#+end_html

Kinoway is a free and open client-based online movie service that uses the Kinopoisk API.

#+begin_center
Watch movies and TV series for free, in high definition, with no restrictions!
#+end_center

** ðŸ‘‰InstallationðŸ¤˜
*** 1. Clone this repository:
#+begin_src bash
  git clone https://github.com/Tell396/kinoway
#+end_src

*** 2. Create and change variables in ~client/.env.local~:
#+begin_src bash
  NEXT_PUBLIC_API_URL=your-token
  NEXT_PUBLIC_API_KEY=very-secret-url
#+end_src

*** 3. Install deps (force):
#+begin_src bash
  npm i -f
#+end_src

*** 4. Now we can startðŸš€
#+begin_src bash
  npm run dev
#+end_src

** ToDo List
- ~@components~ *is architecture fail.* *We shall use* ~../../../../~

*** Client (TypeScript)
**** Add ~N~ [14/14]
1) [X] @ADD: "Actor" page
2) [X] @ADD: "Random films" section with 4-5 random films
3) [X] @ADD: "Too many requests" error
4) [X] @ADD: "View more" page with films, TV shows
5) [X] @ADD: "Watch later" button (component)
6) [X] @ADD: 404 page
7) [X] @ADD: component to provide ~data~ on it. Like ~<Content data={data} loading={isLoading} error={isError} />~
8) [X] @ADD: filters
9) [X] @ADD: loader for all pages
10) [X] @ADD: more content for [[file:client/src/components/screens/Film/Film.tsx][Film.tsx]]
11) [X] @ADD: rating to SearchList component
12) [X] @ADD: reviews section for movies
13) [X] @ADD: ~Room~ component
14) [X] @ADD: Fast search with new endpoints in API.

**** Change / Delete ~N~ [3/7]
1) [ ] @CHANGE: [[file:client/src/components/Catalog/Catalog.tsx][Catalog.tsx]]
2) [X] @CHANGE: logic of ~Hero.tsx~ compoennt. Like ~Header movieData={pathToData}~.
3) [X] @CHANGE: Redesign film page
4) [X] @CHANGE: Redesign main page
5) [ ] @CHANGE: Rewrite components with [[file:client/src/components/Catalog/Catalog.tsx][Catalog.tsx]]
7) [ ] @DELETE: ~.module.scss~ files and move to whole ChakraUI
8) [ ] @DELETE: and change _all_ ~any~ types in code

***** ChakraUI [6/8]
1) [X] @CHANGE: Update buttons 
2) [X] @CHANGE: Update theme switcher
3) [X] @CHANGE: Update film cards
4) [X] @CHANGE: Update LoadMoreButton
5) [-] @CHANGE: Update spinner
6) [X] @CHANGE: Update header. Add burger menu
7) [X] @CHANGE: Update PlayMovie button
8) [-] @CHANGE: Do something with [[file:client/src/components/Catalog/Catalog.tsx][Catalog.tsx]]
   
**** Fix ~N~ [5/7]
1) [X] @BUGFIX: "NaN" mark of film in SearchResults component
2) [X] @BUGFIX: "NaN" mark of film in SimilarMovies component
3) [X] @BUGFIX: "Similar movies" component
4) [ ] @BUGFIX: [[file:client/src/components/Catalog/Catalog.tsx][Catalog.tsx]] and [[file:client/src/components/screens/Favorites/Favorites.tsx][Favorites.tsx]]. Grid plecment + load contents.
5) [X] @BUGFIX: Favorites & WatchLater components. Not all films are display
6) [X] @BUGFIX: footer on film search page
7) [ ] @BUGFIX: Person -> FilmCard component: images



*** Server (Rust) (Not started yet) [2/5]
1) [ ] Deploy server
2) [ ] Connect firebase DB
3) [X] Create ~.env.local~ and ~.env.example~
4) [X] Add main endpoints [100%]
   - [X] ~/register~ @POST
   - [X] ~/login~ @POST
   - [X] ~/favorite_movies~ @POST
   - [X] ~/movies~ @GET
5) [ ] Connect avatar_url uploading with [[https://api.imgbb.com/][imgbb]]
6) [ ] User model:

  #+begin_src rust
    struct User {
        id: i64,
        role: String, // "admin"
        email: String, // "johndoe123@gmail.com"
        password: String, // "password123"
        display_name: String, // "John Doe"
        avatar_url: String, // "https://avatar.png"
        movie_list_id: String
    }
  #+end_src

  #+RESULTS:
