(undo-tree-save-format-version . 1)
"bbf3099b08ed9f21ce46387b5e85aed1edc7b9fd"
[nil nil nil nil (25336 33326 640549 248000) 0 nil]
([nil nil ((nil rear-nonsticky nil 96 . 97) (nil fontified nil 1 . 97) (1 . 97) (t 25336 33325 954552 765000)) nil (25336 36466 52133 137000) 0 nil])
([nil nil ((97 . 98)) nil (25336 36466 52121 931000) 0 nil])
([nil nil ((3 . 17) (1 . 3) (#("footer" 0 6 (fontified t face css-selector)) . -1) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) 7 (t 25336 36466 165009 68000)) nil (25336 36494 872277 86000) 0 nil])
([nil nil ((121 . 136) (#("a" 0 1 (fontified t)) . -121) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 122 (121 . 122) (#("mt15" 0 4 (fontified t)) . -121) (undo-tree-id19 . -4) (undo-tree-id20 . -2) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) 125 (121 . 125) (118 . 121) (119 . 120) (#("			" 0 3 (fontified nil)) . 118) (undo-tree-id62 . -1) (119 . 121) (117 . 120) (109 . 118) (108 . 109) (107 . 108) (#("	" 0 1 (fontified nil)) . 106) (undo-tree-id63 . -1) (105 . 108) (t 25336 36495 98108 311000)) nil (25336 36613 22372 655000) 0 nil])
([nil nil ((149 . 161) (#("t" 0 1 (fontified t)) . -149) (undo-tree-id7 . -1) 150 (141 . 150) (#("mrgin-" 0 6 (fontified t)) . -141) (undo-tree-id8 . -6) 147 (#("b" 0 1 (fontified t)) . -147) (undo-tree-id9 . -1) 148 (141 . 148) (#("r" 0 1 (fontified t)) . -141) (undo-tree-id10 . -1) 142 (141 . 142) (137 . 141) (#("a" 0 1 (fontified t)) . -137) (undo-tree-id11 . -1) 138 (136 . 138)) nil (25336 36613 22221 942000) 0 nil])
([nil nil ((132 . 133)) nil (25336 36705 390205 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 119 . 120) (nil fontified nil 93 . 120) (93 . 120) 92 (t 25336 36613 150682 928000)) nil (25336 36712 424116 565000) 0 nil] [nil nil ((nil rear-nonsticky nil 102 . 103) (nil fontified nil 76 . 103) (76 . 103) 75 (t 25336 36613 150682 928000)) ((#("background-color: #1f1f1f;
" 0 16 (fontified nil face css-property) 16 18 (fontified nil) 18 25 (fontified nil face (:background #("#1f1f1f" 0 7 (fontified t)) :foreground "#ffffff" :box (:line-width -1))) 25 26 (fontified nil) 26 27 (fontified nil rear-nonsticky nil)) . 76) (undo-tree-id64 . -26) (undo-tree-id65 . -27) (undo-tree-id66 . -27) (undo-tree-id67 . -27) (undo-tree-id68 . -27) (undo-tree-id69 . -27) (nil rear-nonsticky t 102 . 103)) (25336 36705 389977 322000) 0 nil])
([nil nil ((#("  background-color: DarkSalmon;
" 0 2 (fontified t) 2 18 (fontified t face css-property) 18 32 (fontified t)) . 58) (undo-tree-id70 . -31) (undo-tree-id71 . -18) (undo-tree-id72 . -32) (undo-tree-id73 . -32) (undo-tree-id74 . -17) (undo-tree-id75 . -17) (undo-tree-id76 . -17) (undo-tree-id77 . -17) (undo-tree-id78 . -17) (undo-tree-id79 . -17) (undo-tree-id80 . -17) (undo-tree-id81 . -17) (undo-tree-id82 . -17) (undo-tree-id83 . -17) (undo-tree-id84 . -17) (undo-tree-id85 . -18) (undo-tree-id86 . -32) (undo-tree-id87 . -32) (undo-tree-id88 . -32) (undo-tree-id89 . -32) (undo-tree-id90 . -32)) nil (25336 36712 424113 405000) 0 nil])
nil
([nil nil ((89 . 90) (88 . 89)) nil (25336 36712 424088 616000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face css-property)) . -60) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 61 (t 25336 36712 536919 577000)) nil (25336 36719 711378 847000) 0 nil])
([nil nil ((117 . 129) (113 . 117) (t 25336 36719 850227 759000)) nil (25336 36739 181055 362000) 0 nil])
([nil nil ((#("			color: teal;
" 0 3 (fontified t) 3 8 (fontified t face css-property) 8 10 (fontified t) 10 14 (fontified t face (:background "#008080" :foreground "#ffffff" :box (:line-width -1))) 14 15 (fontified t) 15 16 (fontified t)) . 114) (undo-tree-id208 . -16) (undo-tree-id209 . -16) (undo-tree-id210 . 1) (undo-tree-id211 . -16) (undo-tree-id212 . -16) (undo-tree-id213 . -16) (undo-tree-id214 . -16) (undo-tree-id215 . -14) (undo-tree-id216 . -14) (undo-tree-id217 . -14) (undo-tree-id218 . -14) (undo-tree-id219 . -14) (undo-tree-id220 . -14) (undo-tree-id221 . -14) (undo-tree-id222 . -14) (undo-tree-id223 . -14) (undo-tree-id224 . -14) (undo-tree-id225 . -14) (undo-tree-id226 . -14) (undo-tree-id227 . -14) (undo-tree-id228 . -14) (undo-tree-id229 . -14) (undo-tree-id230 . -14) (undo-tree-id231 . -14) (undo-tree-id232 . -14) (undo-tree-id233 . -14) (undo-tree-id234 . -14) (undo-tree-id235 . -14) (undo-tree-id236 . -14) (undo-tree-id237 . -14) (undo-tree-id238 . -14) (undo-tree-id239 . -14) (undo-tree-id240 . -14) (undo-tree-id241 . -14) (undo-tree-id242 . -14) (undo-tree-id243 . -14) (undo-tree-id244 . -14) (undo-tree-id245 . -14) (undo-tree-id246 . -14) (undo-tree-id247 . -14) (undo-tree-id248 . -14) (undo-tree-id249 . -14) (undo-tree-id250 . -14) (undo-tree-id251 . -14) (undo-tree-id252 . -14) (undo-tree-id253 . -14) (undo-tree-id254 . -14) (undo-tree-id255 . -14) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -14) (undo-tree-id262 . -14) (undo-tree-id263 . -14) (undo-tree-id264 . -14) (undo-tree-id265 . -14) (undo-tree-id266 . -14) (undo-tree-id267 . -14) (undo-tree-id268 . -14) (undo-tree-id269 . -14) (undo-tree-id270 . -14) (undo-tree-id271 . -14) (undo-tree-id272 . -14) (undo-tree-id273 . -14) (undo-tree-id274 . -14) (undo-tree-id275 . -14) (undo-tree-id276 . -14) (undo-tree-id277 . -14) (undo-tree-id278 . -14) (undo-tree-id279 . -14) (undo-tree-id280 . -14) (undo-tree-id281 . -14) (undo-tree-id282 . -14) (undo-tree-id283 . -14) (undo-tree-id284 . -14) (undo-tree-id285 . -14) (undo-tree-id286 . -14) (undo-tree-id287 . -14) (undo-tree-id288 . -14) (undo-tree-id289 . -14) 128 (t 25336 36731 426856 298000)) nil (25336 36748 831761 758000) 0 nil] [nil nil ((#("			color: teal;
			margin-top: 20px;
" 0 3 (fontified t) 3 8 (fontified t face css-property) 8 10 (fontified t) 10 14 (fontified t face (:background "#008080" :foreground "#ffffff" :box (:line-width -1))) 14 15 (fontified t) 15 16 (fontified t) 16 19 (fontified t) 19 29 (fontified t face css-property) 29 37 (fontified t)) . 114) (undo-tree-id105 . -37) (undo-tree-id106 . -37) (undo-tree-id107 . 22) (undo-tree-id108 . -16) (undo-tree-id109 . -16) (undo-tree-id110 . -16) (undo-tree-id111 . -16) (undo-tree-id112 . -16) (undo-tree-id113 . -16) (undo-tree-id114 . -30) (undo-tree-id115 . -30) (undo-tree-id116 . -30) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -14) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (undo-tree-id125 . -14) (undo-tree-id126 . -14) (undo-tree-id127 . -14) (undo-tree-id128 . -14) (undo-tree-id129 . -14) (undo-tree-id130 . -14) (undo-tree-id131 . -14) (undo-tree-id132 . -14) (undo-tree-id133 . -14) (undo-tree-id134 . -14) (undo-tree-id135 . -14) (undo-tree-id136 . -14) (undo-tree-id137 . -14) (undo-tree-id138 . -14) (undo-tree-id139 . -14) (undo-tree-id140 . -14) (undo-tree-id141 . -14) (undo-tree-id142 . -14) (undo-tree-id143 . -14) (undo-tree-id144 . -14) (undo-tree-id145 . -14) (undo-tree-id146 . -14) (undo-tree-id147 . -14) (undo-tree-id148 . -14) (undo-tree-id149 . -14) (undo-tree-id150 . -14) (undo-tree-id151 . -14) (undo-tree-id152 . -14) (undo-tree-id153 . -14) (undo-tree-id154 . -14) (undo-tree-id155 . -14) (undo-tree-id156 . -14) (undo-tree-id157 . -14) (undo-tree-id158 . -14) (undo-tree-id159 . -14) (undo-tree-id160 . -14) (undo-tree-id161 . -14) (undo-tree-id162 . -14) (undo-tree-id163 . -14) (undo-tree-id164 . -14) (undo-tree-id165 . -14) (undo-tree-id166 . -14) (undo-tree-id167 . -14) (undo-tree-id168 . -14) (undo-tree-id169 . -14) (undo-tree-id170 . -14) 128 (t 25336 36731 426856 298000)) ((114 . 151)) (25336 36739 180470 180000) 0 nil])
([nil nil ((168 . 171) (#("					" 0 5 (fontified nil)) . 167) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (170 . 172) (166 . 171) (163 . 167) (160 . 163) (#("			" 0 3 (fontified nil)) . 159) (159 . 162) (159 . 160) (160 . 161) (#("			" 0 3 (fontified nil)) . 159) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (160 . 162) (160 . 161)) nil (25336 36748 831695 373000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 170 . 171) (#("
" 0 1 (fontified nil)) . -183) (167 . 184)) nil (25336 36748 831477 740000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 167) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1)) nil (25336 36748 831472 953000) 0 nil])
([nil nil ((177 . 184) (#("sky" 0 3 (fontified t)) . -177) (undo-tree-id290 . -3) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) 180 (177 . 180) (#("indigo" 0 6 (fontified t face (:background "#4b0082" :foreground "#ffffff" :box (:line-width -1)))) . -177) (undo-tree-id338 . -6) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -5) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -5) (undo-tree-id383 . -5) (undo-tree-id384 . -6) (undo-tree-id385 . -6) (undo-tree-id386 . -6) (undo-tree-id387 . -6) (undo-tree-id388 . -6) (undo-tree-id389 . -6) (undo-tree-id390 . -6) (undo-tree-id391 . -6) (undo-tree-id392 . -6) (undo-tree-id393 . -6) (undo-tree-id394 . -6) (undo-tree-id395 . -6) (undo-tree-id396 . -6) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -6) 183 (177 . 183) (#("t" 0 1 (fontified t)) . -177) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("e" 0 1 (fontified t)) . -178) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#("a" 0 1 (fontified t)) . -179) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("l" 0 1 (fontified t face (:background "#008080" :foreground "#ffffff" :box (:line-width -1)))) . -180) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 181 (t 25336 36749 10135 572000)) nil (25336 36763 884098 494000) 0 nil])
([nil nil ((21 . 23) (#("		" 0 2 (fontified nil)) . 20) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (19 . 23) (t 25336 36764 63426 212000)) nil (25336 36927 116772 272000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93 . 94) (nil fontified nil 20 . 94) (20 . 94)) nil (25336 36927 116752 806000) 0 nil])
([nil nil ((1 . 285) (#(".footerContainer {
position:fixed;
   left:0px;
   bottom:0px;
   height:30px;
   width:100%;
		
  text-align: center;
  padding: 3px;
  background-color: #1f1f1f;
	color: white;

	.author {
			margin-top: 20px;
			margin-bottom: 20px;

			a {
			color: skyblue;
			}
	}
}
" 0 16 (fontified t face css-selector) 16 17 (fontified t face css-selector) 17 19 (fontified t) 19 27 (fontified t face css-property) 27 38 (fontified t) 38 42 (fontified t face css-property) 42 51 (fontified t) 51 57 (fontified t face css-property) 57 66 (fontified t) 66 72 (fontified t face css-property) 72 79 (fontified t) 79 82 (fontified t) 82 87 (fontified t face css-property) 87 92 (fontified t) 92 93 (rear-nonsticky t fontified t) 93 94 (fontified t) 94 96 (fontified t) 96 97 (fontified t) 97 99 (fontified t) 99 109 (fontified t face css-property) 109 121 (fontified t) 121 128 (fontified t face css-property) 128 135 (fontified t) 135 137 (fontified t) 137 153 (fontified t face css-property) 153 155 (fontified t) 155 162 (fontified t face (:background #("#1f1f1f" 0 7 (fontified t)) :foreground "#ffffff" :box (:line-width -1))) 162 163 (fontified t) 163 164 (rear-nonsticky t fontified t) 164 165 (fontified t) 165 166 (fontified t face css-property) 166 170 (fontified t face css-property) 170 172 (fontified t) 172 177 (fontified t face (:background "#ffffff" :foreground "black" :box (:line-width -1))) 177 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 189 (fontified t face css-selector) 189 191 (fontified t) 191 194 (fontified t) 194 204 (fontified t face css-property) 204 211 (fontified t) 211 212 (fontified t) 212 215 (fontified t) 215 228 (fontified t face css-property) 228 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 240 (fontified t) 240 242 (fontified t face css-selector) 242 244 (fontified t) 244 246 (fontified t) 246 247 (rear-nonsticky t fontified t) 247 252 (fontified t face css-property) 252 254 (fontified t) 254 261 (fontified t face (:background "#87ceeb" :foreground "black" :box (:line-width -1))) 261 262 (fontified t) 262 263 (fontified t) 263 267 (fontified t) 267 268 (fontified t) 268 271 (fontified t) 271 272 (rear-nonsticky t fontified t) 272 273 (fontified t)) . 1) (undo-tree-id515 . -19) (undo-tree-id516 . -19) (undo-tree-id517 . -92) (undo-tree-id518 . -135) (undo-tree-id519 . -135) (undo-tree-id520 . -164) (undo-tree-id521 . -164) (undo-tree-id522 . -179) (undo-tree-id523 . -179) (undo-tree-id524 . -191) (undo-tree-id525 . -191) (undo-tree-id526 . -260) (undo-tree-id527 . -271) (undo-tree-id528 . 180) (undo-tree-id529 . -18) (undo-tree-id530 . -15) (undo-tree-id531 . -15) (undo-tree-id532 . -135) (undo-tree-id533 . -178) (undo-tree-id534 . -178) (undo-tree-id535 . -212) (undo-tree-id536 . -212) (undo-tree-id537 . -236) (undo-tree-id538 . -236) (undo-tree-id539 . -178) (undo-tree-id540 . -191) (undo-tree-id541 . -191) (undo-tree-id542 . -270) (undo-tree-id543 . -270) (undo-tree-id544 . -191) (undo-tree-id545 . -191) (undo-tree-id546 . -205) (undo-tree-id547 . -205) (undo-tree-id548 . -205) (undo-tree-id549 . -135) (undo-tree-id550 . -135) (undo-tree-id551 . -180) (undo-tree-id552 . -180) (undo-tree-id553 . -137) (undo-tree-id554 . -136) (undo-tree-id555 . -19) (undo-tree-id556 . -19) (undo-tree-id557 . -97) (undo-tree-id558 . -97) (undo-tree-id559 . -119) (undo-tree-id560 . -119) (undo-tree-id561 . -94) (undo-tree-id562 . -94) (undo-tree-id563 . -79) (undo-tree-id564 . -79) (undo-tree-id565 . -48) (undo-tree-id566 . -48) (undo-tree-id567 . -63) (undo-tree-id568 . -63) (undo-tree-id569 . -262) (undo-tree-id570 . -260) (undo-tree-id571 . -260) (undo-tree-id572 . -260) (undo-tree-id573 . -260) (undo-tree-id574 . -260) (undo-tree-id575 . -260) (undo-tree-id576 . -260) (undo-tree-id577 . -260) (undo-tree-id578 . -260) (undo-tree-id579 . -260) (undo-tree-id580 . -260) (undo-tree-id581 . -260) (undo-tree-id582 . -260) (undo-tree-id583 . -260) (undo-tree-id584 . -260) (undo-tree-id585 . -260) (undo-tree-id586 . -118) (undo-tree-id587 . -118) (undo-tree-id588 . -118) (undo-tree-id589 . -118) (undo-tree-id590 . -118) (undo-tree-id591 . -117) (undo-tree-id592 . -117) (undo-tree-id593 . -117) (undo-tree-id594 . -117) (undo-tree-id595 . -117) (undo-tree-id596 . -18) (undo-tree-id597 . -18) (undo-tree-id598 . -18) (undo-tree-id599 . -18) (undo-tree-id600 . -18) (undo-tree-id601 . -17) (undo-tree-id602 . -17) (undo-tree-id603 . -17) (undo-tree-id604 . -17) (undo-tree-id605 . -17) (undo-tree-id606 . -17) (undo-tree-id607 . -17) (undo-tree-id608 . -17) (undo-tree-id609 . -17) (undo-tree-id610 . -17) (undo-tree-id611 . -17) (undo-tree-id612 . -17) (undo-tree-id613 . -17) (undo-tree-id614 . -17) (undo-tree-id615 . -17) (undo-tree-id616 . -17) (undo-tree-id617 . -17) (undo-tree-id618 . -17) (undo-tree-id619 . -17) (undo-tree-id620 . -17) (undo-tree-id621 . -17) (undo-tree-id622 . -17) (undo-tree-id623 . -17) (undo-tree-id624 . -17) (undo-tree-id625 . -17) (undo-tree-id626 . -17) (undo-tree-id627 . -17) (undo-tree-id628 . -17) (undo-tree-id629 . -17) (undo-tree-id630 . -17) (undo-tree-id631 . -17) (undo-tree-id632 . -17) (undo-tree-id633 . -17) (undo-tree-id634 . -17) (undo-tree-id635 . -17) (undo-tree-id636 . -17) (undo-tree-id637 . -17) (undo-tree-id638 . -17) (undo-tree-id639 . -17) (undo-tree-id640 . -17) (undo-tree-id641 . -18) (undo-tree-id642 . -18) (undo-tree-id643 . -18) (undo-tree-id644 . -18) (undo-tree-id645 . -18) (undo-tree-id646 . -18) (undo-tree-id647 . -18) (undo-tree-id648 . -18) (undo-tree-id649 . -18) (undo-tree-id650 . -18) (undo-tree-id651 . 255) (undo-tree-id652 . -237) (undo-tree-id653 . -237) (undo-tree-id654 . -19) (undo-tree-id655 . -19) (undo-tree-id656 . -19) (undo-tree-id657 . -19) (undo-tree-id658 . -19) (undo-tree-id659 . -19) (undo-tree-id660 . -19) (undo-tree-id661 . -19) (undo-tree-id662 . -19) (undo-tree-id663 . -19) (undo-tree-id664 . -19) (undo-tree-id665 . 180) (undo-tree-id666 . -35) (undo-tree-id667 . -35) (undo-tree-id668 . -96) (undo-tree-id669 . -96) (undo-tree-id670 . -96) (undo-tree-id671 . -96) (undo-tree-id672 . -96) (undo-tree-id673 . -96) (undo-tree-id674 . -96) (undo-tree-id675 . -96) (undo-tree-id676 . -96) (undo-tree-id677 . -96) (undo-tree-id678 . -101) (undo-tree-id679 . -101) (undo-tree-id680 . -101) (undo-tree-id681 . -101) (undo-tree-id682 . -101) (undo-tree-id683 . -96) (undo-tree-id684 . -96) (undo-tree-id685 . -96) (undo-tree-id686 . -96) (undo-tree-id687 . -96) (undo-tree-id688 . -19) (undo-tree-id689 . -19) (undo-tree-id690 . -19) (undo-tree-id691 . -19) (undo-tree-id692 . -19) (undo-tree-id693 . -19) (undo-tree-id694 . -19) (undo-tree-id695 . -19) (undo-tree-id696 . -19) (undo-tree-id697 . -19) (undo-tree-id698 . -19) (undo-tree-id699 . -19) (undo-tree-id700 . -19) (undo-tree-id701 . -19) (undo-tree-id702 . -19) (undo-tree-id703 . -19) (undo-tree-id704 . -19) (undo-tree-id705 . -19) (undo-tree-id706 . -19) (undo-tree-id707 . -19) (undo-tree-id708 . -18) (undo-tree-id709 . -19) (undo-tree-id710 . -79) (undo-tree-id711 . -93) (undo-tree-id712 . -244) (undo-tree-id713 . -244) (undo-tree-id714 . -263) (undo-tree-id715 . -263) (undo-tree-id716 . -268) (undo-tree-id717 . -268) (undo-tree-id718 . -271) (undo-tree-id719 . -271) (undo-tree-id720 . -92) (undo-tree-id721 . -92) (undo-tree-id722 . -92) (undo-tree-id723 . -92) (undo-tree-id724 . -92) (undo-tree-id725 . -92) (undo-tree-id726 . -92) (undo-tree-id727 . -92) (undo-tree-id728 . -92) (undo-tree-id729 . -92) (undo-tree-id730 . -92) (undo-tree-id731 . -92) (undo-tree-id732 . -92) (undo-tree-id733 . -92) (undo-tree-id734 . -92) (undo-tree-id735 . -92) (undo-tree-id736 . -92) (undo-tree-id737 . -92) (undo-tree-id738 . -92) (undo-tree-id739 . -92) (undo-tree-id740 . -92) (undo-tree-id741 . -92) (undo-tree-id742 . -92) (undo-tree-id743 . -92) (undo-tree-id744 . -79) (undo-tree-id745 . -92) (undo-tree-id746 . -92) (undo-tree-id747 . -92) (undo-tree-id748 . -92) (undo-tree-id749 . -92) (undo-tree-id750 . -92) (undo-tree-id751 . -92) (undo-tree-id752 . -92) (undo-tree-id753 . -92) (undo-tree-id754 . -92) (undo-tree-id755 . -92) (undo-tree-id756 . -92) (undo-tree-id757 . -92) (undo-tree-id758 . -92) (undo-tree-id759 . -92) (undo-tree-id760 . -92) (undo-tree-id761 . -92) (undo-tree-id762 . -92) (undo-tree-id763 . -92) (undo-tree-id764 . -92) (undo-tree-id765 . -92) (undo-tree-id766 . -92) (undo-tree-id767 . -92) (undo-tree-id768 . -92) (undo-tree-id769 . -92) (undo-tree-id770 . -92) (undo-tree-id771 . -92)) nil (25336 36927 116727 823000) 0 nil])
([nil nil ((62 . 64) (#("0" 0 1 (fontified t)) . -62) (undo-tree-id785 . -1) (undo-tree-id786 . -1) 63 (t 25336 36927 209817 564000)) nil (25336 36949 935883 177000) 0 nil])
([nil nil ((#("  height: 30px;
" 0 2 (fontified t) 2 8 (fontified t face css-property) 8 16 (fontified t)) . 68) (undo-tree-id787 . -16) (undo-tree-id788 . -16) (undo-tree-id789 . -11) (undo-tree-id790 . -11) (undo-tree-id791 . -11) (undo-tree-id792 . -11) (undo-tree-id793 . -11) (undo-tree-id794 . -11) (undo-tree-id795 . -11) (undo-tree-id796 . -11) (undo-tree-id797 . -11) (undo-tree-id798 . -11) (undo-tree-id799 . -11) (undo-tree-id800 . -11) 79 (t 25336 36950 109803 15000)) nil (25336 36955 150566 207000) 0 nil])
([nil current ((62 . 63) (#("1" 0 1 (fontified t)) . -62) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("5" 0 1 (fontified t)) . -63) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) 64 (t 25336 36955 346467 88000)) nil (25336 36960 750133 700000) 0 nil])
nil
